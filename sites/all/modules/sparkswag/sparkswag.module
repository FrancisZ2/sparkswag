<?php
require_once '/home/spark2015admin/public_html/researchdb/kint/Kint.class.php';
/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */



function sparkswag_help($path, $arg) {
  switch ($path) {
    case "opportunity/form1":
      return '<p>' . t("This is helpful info about the form.") . '</p>';
      break;
  case "admin/help#sparkswag":
      return '<p>' . t("This is some help text in the admin menu.") . '</p>';
      break;
  }
} 

function sparkswag_menu() {
	$items = array();
  
	//"Registers URL  opportunity/form1, can view in browser"
	$items['opportunity/form1'] = array( 
	    'title' => 'Research Opportunity Form', //page title
	    'description' => 'A form to fill out info',
	    'page callback' => 'drupal_get_form', //drupal_get_form function is executed when webpage is accessed.
	    'page arguments' => array('sparkswag_myform1_form'), //drupal_get_form function gets this form as array
	    'access callback' => TRUE
	);
	$items['opportunity/mynode'] = array( 
		'title' => 'Opportunity Node Access',
	    'page callback' => 'sparkswag_private_node_listing',
	    'access callback' => TRUE,
	);
	$items['admin/settings/sparkswag'] = array(
	    'title' => 'Sparkswag',
	    'description' => 'This is module settings page',
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('sparkswag_admin'),
	    'access arguments' => array('administer sparkswag content'),
	    'type' => MENU_NORMAL_ITEM,
	);
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function sparkswag_permission() {
$permission['access sparkswag content'] = array(
      'title' => t('Access content for the Spark Swag module'),
    );
$permission['administer sparkswag content'] = array(
      'title' => t('Administer content for the Spark Swag module'),
);

}


/**
 * Implements hook_block_info().
 */
function sparkswag_block_info() {
  $blocks['myblock1'] = array(
    'info' => t('Spark block'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  
$blocks['myblock2'] = array(
    'info' => t('Spark block 2'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  
	
  
  return $blocks;
}

function sparkswag_block_view($delta = '') {
  $block = array();

	switch ($delta) {
	case 'myblock1':
		$blocks['subject'] = t('This is a subject for block.');
		$form = drupal_get_form('sparkswag_myform1_form');	//call form
	        $block['content'] = drupal_render($form);	//get html from $form put in block content.
	break;
  return $block;
  }
}


function sparkswag_myform1_form($form, &$form_state){

$form['name'] = array(
	'#type' => 'textfield',
	'#name' => 'name',
	'#maxlength'=> 255,
	'#size'=> 30,
   	//'#value' => t('Name'),
	'#title' => t('Name'),
	'#title_display' => 'before'
	
  );

$form['description'] = array(
    '#type' => 'textarea',
	'#name' => 'description',
	'#maxlength'=> 1000,
	'#size'=> 30,
	'#title' =>  t('description'),
	'#title_display' => 'before'
	
  );

$form['positions'] = array(
	'#type' => 'textfield',
	'#name' => 'positions',
	'#maxlength'=> 5,
	'#size'=> 10,
	'#title' => t('Positions available'),
	'#title_display' => 'before'
  );
  

$form['startdate'] = array(
	'#type' => 'date',
	'#title' => 'start date',
	'#title_display' => 'before',
	'#required'=> TRUE,
    
  );
  
$form['enddate'] = array(
	'#type' => 'date',
	'#name' => 'enddate',
	'#title' => t('End Date'),
	'#title_display' => 'before'

  );
  
$form['deadline'] = array(
	'#type' => 'date',
	'#name' => 'deadline',
	'#title' => t('Application Deadline'),
	'#title_display' => 'before'
  );
  
    
$form['location'] = array(
	'#type' => 'textfield',
	'#name' => 'location',
	'#maxlength'=> 100,
	'#size'=> 10,
	'#title' => t('Location'),
	'#title_display' => 'before'
  );
  
  
$form['institution'] = array(
	'#type' => 'textfield',
	'#name' => 'institution',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title' =>t('Institution'),
	'#title_display' => 'before'
  );
  
$form['institutiontype'] = array(
	'#type' => 'textfield',
	'#name' => 'institutiontype',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title' =>t('Institution Type'),
	'#title_display' => 'before'
  );
  
$form['discipline'] = array(
	'#type' => 'textfield',
	'#name' => 'discipline',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title' => t('Discipline'),
	'#title_display' => 'before'
  );
 
$form['logo'] = array(
	'#type' => 'textfield',
	'#name' => 'logo',
	'#maxlength'=> 30,
	'#size'=> 10,
	'#title'=> t('Logo'),
	'#title_display' => 'before'
  );
  
$form['homepage'] = array(
	'#type' => 'textfield',
	'#name' => 'homepage',
	'#maxlength'=> 100,
	'#size'=> 10,
	'#title'=> t('Opportunity Homepage'),
	'#title_display' => 'before'
  );
  
  
$form['gpareq'] = array(
	'#type' => 'textfield',
	'#name' => 'gpareq',
	'#maxlength'=> 5,
	'#size'=> 10,
	'#title'=> t('GPA Requirement'),
	'#title_display' => 'before'
  );
  
  
$form['gradereg'] = array(
	'#type' => 'textfield',
	'#name' => 'gradereg',
	'#maxlength'=> 20,
	'#size'=> 10,
	'#title'=> t('Grade Level Requirement'),
	'#title_display' => 'before'
  );
  
$form['paid'] = array(
	'#type' => 'checkbox',
	'#name' => 'paid',
	'#title'=> t('Paid'),
	'#title_display' => 'before'
  );
  
$form['contactinfo'] = array(
	'#type' => 'textarea',
	'#name' => 'contactinfo',
	'#maxlength'=> 100,
	'#size'=> 30,
	'#title'=> t('Contact Information'),
	'#title_display' => 'before'
  );


$form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Create!'),
  );
  
  return $form;
}


function sparkswag_myform1_form_submit($form, &$form_state) {
	drupal_set_message(t('The form is saving to DB!'));
	$insert = db_insert('opportunity');
	$form_name = $form_state['values']['name'];
	
	//insert object goes in insert object comes out
	//you can't explain that.
	$insert-> fields(array(
		'pid' => 2,
		'name' => $form_name,
		'uid' => 0,)
	)
	->execute();
}


function  sparkswag_private_node_listing(){
	$html = '<div>'.t('My new node ').'</div>';
	
	return array('#markup' => $html);
}

function sparkswag_admin() {
  $form = array();

  $form['sparkswag_admin_val1'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of opportunities'),
    '#default_value' => variable_get('sparkswag_setting1', 5),
    '#size' => 20,
    '#maxlength' => 20,
    '#description' => t("The Maximum number of opportunities"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function sparkswag_admin_validate($form, &$form_state) {
	//set error cheching here on posted values
	$adminval1 = $form_state['values']['sparkswag_admin_val1'];
	if (!is_numeric($adminval1)) {
	form_set_error('sparkswag_admin_val1', t('Enter a whole number'));
  }
}
